James Hall
CECS 327
Lecture Assignment
NOTES: Chapter 10(peer-to-peer systems),
       Chapter 14(time and global states),
       Chapter 15(coordination and agreement),
       Chapter 16(transaction and concurrency control),
       Chapter 17(Distributed Transactions).

NOTES: Type your answer in a text editor and submit your document on beachboard.

1. Early file-sharing applications such as Napster were restricted in their scalability by the need to maintain a central index of resources and the hosts that hold them. What other solutions to the indexing problem can you identify?

Response:



2. In unstructured peer-to-peer systems, significant improvements on search results can be provided by the adoption of particular search strategies. Compare and contrast expanded ring search and random walk strategies, highlighting when each approach is likely to be effective.

Response:


3. Why is computer clock synchronization necessary? Describe the design requirements for a system to synchronize the clocks in a distributed system.

Response:

4. A scheme for implementing at-most-once reliable message delivery uses synchronized clocks to reject duplicate messages. Processes place their local clock value (a “timestamp”) in the messages they send. Each receiver keeps a table giving, for each sending process, the largest message timestamp it has seen. Assume that clocks are synchronized to within 100 ms, and that messages can arrive at most 50 ms after trans- mission.

(i) When may a process ignore a message bearing a timestamp T, if it has recorded the last message received from that process as having timestamp T0?

(ii) When may a receiver remove a timestamp 175,000 (ms) from its table? (Hint: use the receivers local clock value.)

(iii) Should the clocks be internally synchronized or externally synchronized?

Response:

5. By considering a chain of zero or more messages connecting events e and e` and using induction, show that e ! e0 ) L(e) < L(e0). <-(I have no fucking idea what this means.)-james

Resposne:
  -NOPE
  //TODO: Research question 5 at least memorize the answer.

6. Two processes P and Q are connected in a ring using two channels, and they constantly rotate a message m. At any one time, there is only one copy of m in the system. Each processs state consists of the number of times it has received m, and P sends m first. At a certain point, P has the message and its state is 101. Immediately after sending m, P initiates the snapshot algorithm. Explain the operation of the algorithm in this case, giving the possible global state(s) reported by it.// Look up Snap-Shot Algorith, this sounds like atomic stuff.

Response:

7. Adapt the central server algorithm for mutual exclusion to handle the crash failure of any client (in any state), assuming that the server is correct and given a reliable failure detector. Comment on whether the resultant system is fault tolerant. What would happen if a client that possesses the token is wrongly suspected to have failed?

Response:

8. In the Bully algorithm, a recovering process starts an election and will become the new coordinator if it has a higher identifier than the current incumbent. Is this a necessary feature of the algorithm? (This is an interesting one. I don't know what this is about.)

Response:

9. A server manages the objects a1, a2, ..., an. The server provides two operations for its clients: read(i) returns the value of ai; write(i, Value) assigns Value to ai.
The transactions T and U are defined as follows:
T : x = read(j); y = read(i); write(j, 44); write(i, 33);
U : x = read(k); write(i, 55); y = read(j); write(k, 66).
Give three serially equivalent inter leavings of the transactions T and U.

Response:(Need to come back to this one.)

10. Give serially equivalent interleaving of T and U in the previous problem with the following properties:(Come Back to.)

• that is strict;
• that is not strict but could not produce cascading aborts;
• that could produce cascading aborts.

Response:

11. Describe how a non-recoverable situation could arise if write locks are released after the last operation of a transaction but before its commitment.

Response:(Read up on this one, and then think about the answer doesn't sound to hard.)

12. In a decentralized variant of the two-phase commit protocol the participants communicate directly with one another instead of indirectly via the coordinator. In Phase 1, the coordinator sends its vote to all the participants. In Phase 2, if the coordinator’s vote is No, the participants just abort the transaction; if it is Yes, each participant sends its vote to the coordinator and the other participants, each of which decides on the outcome according to the vote and carries it out. Calculate the number of messages and the number of rounds it takes. What are its advantages or disadvantages in comparison with the centralized variant?

Response:


13. A server uses timestamp ordering for local concurrency control. What changes must be made to adapt it for use with distributed transactions? Under what conditions could it be argued that the two-phase commit protocol is redundant with timestamp ordering?

Response:(Read up on this one.)
